#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VinVentory
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NicsInventory1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertColor(Color instance);
    partial void UpdateColor(Color instance);
    partial void DeleteColor(Color instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertEtsyFee(EtsyFee instance);
    partial void UpdateEtsyFee(EtsyFee instance);
    partial void DeleteEtsyFee(EtsyFee instance);
    partial void InsertMailerOrderItem(MailerOrderItem instance);
    partial void UpdateMailerOrderItem(MailerOrderItem instance);
    partial void DeleteMailerOrderItem(MailerOrderItem instance);
    partial void InsertMailer(Mailer instance);
    partial void UpdateMailer(Mailer instance);
    partial void DeleteMailer(Mailer instance);
    partial void InsertSecondaryItem(SecondaryItem instance);
    partial void UpdateSecondaryItem(SecondaryItem instance);
    partial void DeleteSecondaryItem(SecondaryItem instance);
    partial void InsertVinylType(VinylType instance);
    partial void UpdateVinylType(VinylType instance);
    partial void DeleteVinylType(VinylType instance);
    partial void InsertSecondaryOrderItem(SecondaryOrderItem instance);
    partial void UpdateSecondaryOrderItem(SecondaryOrderItem instance);
    partial void DeleteSecondaryOrderItem(SecondaryOrderItem instance);
    partial void InsertShirtColor(ShirtColor instance);
    partial void UpdateShirtColor(ShirtColor instance);
    partial void DeleteShirtColor(ShirtColor instance);
    partial void InsertShirt(Shirt instance);
    partial void UpdateShirt(Shirt instance);
    partial void DeleteShirt(Shirt instance);
    partial void InsertShirtSize(ShirtSize instance);
    partial void UpdateShirtSize(ShirtSize instance);
    partial void DeleteShirtSize(ShirtSize instance);
    partial void InsertShirtStyle(ShirtStyle instance);
    partial void UpdateShirtStyle(ShirtStyle instance);
    partial void DeleteShirtStyle(ShirtStyle instance);
    partial void InsertStickerOrderItem(StickerOrderItem instance);
    partial void UpdateStickerOrderItem(StickerOrderItem instance);
    partial void DeleteStickerOrderItem(StickerOrderItem instance);
    partial void InsertSticker(Sticker instance);
    partial void UpdateSticker(Sticker instance);
    partial void DeleteSticker(Sticker instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertVinyl(Vinyl instance);
    partial void UpdateVinyl(Vinyl instance);
    partial void DeleteVinyl(Vinyl instance);
    partial void InsertVinylOrderItem(VinylOrderItem instance);
    partial void UpdateVinylOrderItem(VinylOrderItem instance);
    partial void DeleteVinylOrderItem(VinylOrderItem instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::VinVentory.Properties.Settings.Default.NicsInventory1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Color> Colors
		{
			get
			{
				return this.GetTable<Color>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<EtsyFee> EtsyFees
		{
			get
			{
				return this.GetTable<EtsyFee>();
			}
		}
		
		public System.Data.Linq.Table<MailerOrderItem> MailerOrderItems
		{
			get
			{
				return this.GetTable<MailerOrderItem>();
			}
		}
		
		public System.Data.Linq.Table<Mailer> Mailers
		{
			get
			{
				return this.GetTable<Mailer>();
			}
		}
		
		public System.Data.Linq.Table<SecondaryItem> SecondaryItems
		{
			get
			{
				return this.GetTable<SecondaryItem>();
			}
		}
		
		public System.Data.Linq.Table<VinylType> VinylTypes
		{
			get
			{
				return this.GetTable<VinylType>();
			}
		}
		
		public System.Data.Linq.Table<SecondaryOrderItem> SecondaryOrderItems
		{
			get
			{
				return this.GetTable<SecondaryOrderItem>();
			}
		}
		
		public System.Data.Linq.Table<ShirtColor> ShirtColors
		{
			get
			{
				return this.GetTable<ShirtColor>();
			}
		}
		
		public System.Data.Linq.Table<Shirt> Shirts
		{
			get
			{
				return this.GetTable<Shirt>();
			}
		}
		
		public System.Data.Linq.Table<ShirtSize> ShirtSizes
		{
			get
			{
				return this.GetTable<ShirtSize>();
			}
		}
		
		public System.Data.Linq.Table<ShirtStyle> ShirtStyles
		{
			get
			{
				return this.GetTable<ShirtStyle>();
			}
		}
		
		public System.Data.Linq.Table<StickerOrderItem> StickerOrderItems
		{
			get
			{
				return this.GetTable<StickerOrderItem>();
			}
		}
		
		public System.Data.Linq.Table<Sticker> Stickers
		{
			get
			{
				return this.GetTable<Sticker>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<Vinyl> Vinyls
		{
			get
			{
				return this.GetTable<Vinyl>();
			}
		}
		
		public System.Data.Linq.Table<VinylOrderItem> VinylOrderItems
		{
			get
			{
				return this.GetTable<VinylOrderItem>();
			}
		}
		
		public System.Data.Linq.Table<V_AllQuantity> V_AllQuantities
		{
			get
			{
				return this.GetTable<V_AllQuantity>();
			}
		}
		
		public System.Data.Linq.Table<v_VinylStock> v_VinylStocks
		{
			get
			{
				return this.GetTable<v_VinylStock>();
			}
		}
		
		public System.Data.Linq.Table<v_Color_Type> v_Color_Types
		{
			get
			{
				return this.GetTable<v_Color_Type>();
			}
		}
		
		public System.Data.Linq.Table<V_NeedToOrder> V_NeedToOrders
		{
			get
			{
				return this.GetTable<V_NeedToOrder>();
			}
		}
		
		public System.Data.Linq.Table<V_OrderItem> V_OrderItems
		{
			get
			{
				return this.GetTable<V_OrderItem>();
			}
		}
		
		public System.Data.Linq.Table<v_Product> v_Products
		{
			get
			{
				return this.GetTable<v_Product>();
			}
		}
		
		public System.Data.Linq.Table<v_ProductTotal> v_ProductTotals
		{
			get
			{
				return this.GetTable<v_ProductTotal>();
			}
		}
		
		public System.Data.Linq.Table<v_TotalStock> v_TotalStocks
		{
			get
			{
				return this.GetTable<v_TotalStock>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Colors")]
	public partial class Color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ColorNum;
		
		private EntitySet<Vinyl> _Vinyls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnColorNumChanging(System.Nullable<int> value);
    partial void OnColorNumChanged();
    #endregion
		
		public Color()
		{
			this._Vinyls = new EntitySet<Vinyl>(new Action<Vinyl>(this.attach_Vinyls), new Action<Vinyl>(this.detach_Vinyls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorNum", DbType="Int")]
		public System.Nullable<int> ColorNum
		{
			get
			{
				return this._ColorNum;
			}
			set
			{
				if ((this._ColorNum != value))
				{
					this.OnColorNumChanging(value);
					this.SendPropertyChanging();
					this._ColorNum = value;
					this.SendPropertyChanged("ColorNum");
					this.OnColorNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Color_Vinyl", Storage="_Vinyls", ThisKey="ID", OtherKey="ColorID")]
		public EntitySet<Vinyl> Vinyls
		{
			get
			{
				return this._Vinyls;
			}
			set
			{
				this._Vinyls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vinyls(Vinyl entity)
		{
			this.SendPropertyChanging();
			entity.Color = this;
		}
		
		private void detach_Vinyls(Vinyl entity)
		{
			this.SendPropertyChanging();
			entity.Color = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.DateTime _OrderDate;
		
		private System.Nullable<decimal> _OrderPrice;
		
		private EntitySet<MailerOrderItem> _MailerOrderItems;
		
		private EntitySet<SecondaryOrderItem> _SecondaryOrderItems;
		
		private EntitySet<StickerOrderItem> _StickerOrderItems;
		
		private EntitySet<VinylOrderItem> _VinylOrderItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnOrderPriceChanging(System.Nullable<decimal> value);
    partial void OnOrderPriceChanged();
    #endregion
		
		public Order()
		{
			this._MailerOrderItems = new EntitySet<MailerOrderItem>(new Action<MailerOrderItem>(this.attach_MailerOrderItems), new Action<MailerOrderItem>(this.detach_MailerOrderItems));
			this._SecondaryOrderItems = new EntitySet<SecondaryOrderItem>(new Action<SecondaryOrderItem>(this.attach_SecondaryOrderItems), new Action<SecondaryOrderItem>(this.detach_SecondaryOrderItems));
			this._StickerOrderItems = new EntitySet<StickerOrderItem>(new Action<StickerOrderItem>(this.attach_StickerOrderItems), new Action<StickerOrderItem>(this.detach_StickerOrderItems));
			this._VinylOrderItems = new EntitySet<VinylOrderItem>(new Action<VinylOrderItem>(this.attach_VinylOrderItems), new Action<VinylOrderItem>(this.detach_VinylOrderItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPrice", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> OrderPrice
		{
			get
			{
				return this._OrderPrice;
			}
			set
			{
				if ((this._OrderPrice != value))
				{
					this.OnOrderPriceChanging(value);
					this.SendPropertyChanging();
					this._OrderPrice = value;
					this.SendPropertyChanged("OrderPrice");
					this.OnOrderPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_MailerOrderItem", Storage="_MailerOrderItems", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<MailerOrderItem> MailerOrderItems
		{
			get
			{
				return this._MailerOrderItems;
			}
			set
			{
				this._MailerOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_SecondaryOrderItem", Storage="_SecondaryOrderItems", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<SecondaryOrderItem> SecondaryOrderItems
		{
			get
			{
				return this._SecondaryOrderItems;
			}
			set
			{
				this._SecondaryOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_StickerOrderItem", Storage="_StickerOrderItems", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<StickerOrderItem> StickerOrderItems
		{
			get
			{
				return this._StickerOrderItems;
			}
			set
			{
				this._StickerOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_VinylOrderItem", Storage="_VinylOrderItems", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<VinylOrderItem> VinylOrderItems
		{
			get
			{
				return this._VinylOrderItems;
			}
			set
			{
				this._VinylOrderItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MailerOrderItems(MailerOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_MailerOrderItems(MailerOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_SecondaryOrderItems(SecondaryOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_SecondaryOrderItems(SecondaryOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_StickerOrderItems(StickerOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_StickerOrderItems(StickerOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_VinylOrderItems(VinylOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_VinylOrderItems(VinylOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EtsyFees")]
	public partial class EtsyFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private decimal _ListedPrice;
		
		private System.Nullable<decimal> _ListedShipping;
		
		private System.Nullable<decimal> _TotalPayment;
		
		private decimal _Commision;
		
		private int _Items;
		
		private decimal _PaymentFee;
		
		private decimal _TotalFees;
		
		private decimal _ProfitBeforeShipping;
		
		private System.Nullable<decimal> _ActualShipping;
		
		private System.Nullable<decimal> _TotalProfit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnListedPriceChanging(decimal value);
    partial void OnListedPriceChanged();
    partial void OnListedShippingChanging(System.Nullable<decimal> value);
    partial void OnListedShippingChanged();
    partial void OnTotalPaymentChanging(System.Nullable<decimal> value);
    partial void OnTotalPaymentChanged();
    partial void OnCommisionChanging(decimal value);
    partial void OnCommisionChanged();
    partial void OnItemsChanging(int value);
    partial void OnItemsChanged();
    partial void OnPaymentFeeChanging(decimal value);
    partial void OnPaymentFeeChanged();
    partial void OnTotalFeesChanging(decimal value);
    partial void OnTotalFeesChanged();
    partial void OnProfitBeforeShippingChanging(decimal value);
    partial void OnProfitBeforeShippingChanged();
    partial void OnActualShippingChanging(System.Nullable<decimal> value);
    partial void OnActualShippingChanged();
    partial void OnTotalProfitChanging(System.Nullable<decimal> value);
    partial void OnTotalProfitChanged();
    #endregion
		
		public EtsyFee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListedPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal ListedPrice
		{
			get
			{
				return this._ListedPrice;
			}
			set
			{
				if ((this._ListedPrice != value))
				{
					this.OnListedPriceChanging(value);
					this.SendPropertyChanging();
					this._ListedPrice = value;
					this.SendPropertyChanged("ListedPrice");
					this.OnListedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListedShipping", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ListedShipping
		{
			get
			{
				return this._ListedShipping;
			}
			set
			{
				if ((this._ListedShipping != value))
				{
					this.OnListedShippingChanging(value);
					this.SendPropertyChanging();
					this._ListedShipping = value;
					this.SendPropertyChanged("ListedShipping");
					this.OnListedShippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPayment
		{
			get
			{
				return this._TotalPayment;
			}
			set
			{
				if ((this._TotalPayment != value))
				{
					this.OnTotalPaymentChanging(value);
					this.SendPropertyChanging();
					this._TotalPayment = value;
					this.SendPropertyChanged("TotalPayment");
					this.OnTotalPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commision", DbType="Decimal(18,2) NOT NULL")]
		public decimal Commision
		{
			get
			{
				return this._Commision;
			}
			set
			{
				if ((this._Commision != value))
				{
					this.OnCommisionChanging(value);
					this.SendPropertyChanging();
					this._Commision = value;
					this.SendPropertyChanged("Commision");
					this.OnCommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Items", DbType="Int NOT NULL")]
		public int Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				if ((this._Items != value))
				{
					this.OnItemsChanging(value);
					this.SendPropertyChanging();
					this._Items = value;
					this.SendPropertyChanged("Items");
					this.OnItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFee", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaymentFee
		{
			get
			{
				return this._PaymentFee;
			}
			set
			{
				if ((this._PaymentFee != value))
				{
					this.OnPaymentFeeChanging(value);
					this.SendPropertyChanging();
					this._PaymentFee = value;
					this.SendPropertyChanged("PaymentFee");
					this.OnPaymentFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFees", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalFees
		{
			get
			{
				return this._TotalFees;
			}
			set
			{
				if ((this._TotalFees != value))
				{
					this.OnTotalFeesChanging(value);
					this.SendPropertyChanging();
					this._TotalFees = value;
					this.SendPropertyChanged("TotalFees");
					this.OnTotalFeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitBeforeShipping", DbType="Decimal(18,2) NOT NULL")]
		public decimal ProfitBeforeShipping
		{
			get
			{
				return this._ProfitBeforeShipping;
			}
			set
			{
				if ((this._ProfitBeforeShipping != value))
				{
					this.OnProfitBeforeShippingChanging(value);
					this.SendPropertyChanging();
					this._ProfitBeforeShipping = value;
					this.SendPropertyChanged("ProfitBeforeShipping");
					this.OnProfitBeforeShippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualShipping", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ActualShipping
		{
			get
			{
				return this._ActualShipping;
			}
			set
			{
				if ((this._ActualShipping != value))
				{
					this.OnActualShippingChanging(value);
					this.SendPropertyChanging();
					this._ActualShipping = value;
					this.SendPropertyChanged("ActualShipping");
					this.OnActualShippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalProfit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalProfit
		{
			get
			{
				return this._TotalProfit;
			}
			set
			{
				if ((this._TotalProfit != value))
				{
					this.OnTotalProfitChanging(value);
					this.SendPropertyChanging();
					this._TotalProfit = value;
					this.SendPropertyChanged("TotalProfit");
					this.OnTotalProfitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailerOrderItems")]
	public partial class MailerOrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _OrderID;
		
		private long _MailerID;
		
		private int _Quantity;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<Mailer> _Mailer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(long value);
    partial void OnOrderIDChanged();
    partial void OnMailerIDChanging(long value);
    partial void OnMailerIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public MailerOrderItem()
		{
			this._Order = default(EntityRef<Order>);
			this._Mailer = default(EntityRef<Mailer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="BigInt NOT NULL")]
		public long OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailerID", DbType="BigInt NOT NULL")]
		public long MailerID
		{
			get
			{
				return this._MailerID;
			}
			set
			{
				if ((this._MailerID != value))
				{
					if (this._Mailer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMailerIDChanging(value);
					this.SendPropertyChanging();
					this._MailerID = value;
					this.SendPropertyChanged("MailerID");
					this.OnMailerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_MailerOrderItem", Storage="_Order", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.MailerOrderItems.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.MailerOrderItems.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(long);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mailer_MailerOrderItem", Storage="_Mailer", ThisKey="MailerID", OtherKey="ID", IsForeignKey=true)]
		public Mailer Mailer
		{
			get
			{
				return this._Mailer.Entity;
			}
			set
			{
				Mailer previousValue = this._Mailer.Entity;
				if (((previousValue != value) 
							|| (this._Mailer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mailer.Entity = null;
						previousValue.MailerOrderItems.Remove(this);
					}
					this._Mailer.Entity = value;
					if ((value != null))
					{
						value.MailerOrderItems.Add(this);
						this._MailerID = value.ID;
					}
					else
					{
						this._MailerID = default(long);
					}
					this.SendPropertyChanged("Mailer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mailers")]
	public partial class Mailer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<int> _NotificationLevel;
		
		private System.Nullable<long> _SupplierID;
		
		private EntitySet<MailerOrderItem> _MailerOrderItems;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnNotificationLevelChanging(System.Nullable<int> value);
    partial void OnNotificationLevelChanged();
    partial void OnSupplierIDChanging(System.Nullable<long> value);
    partial void OnSupplierIDChanged();
    #endregion
		
		public Mailer()
		{
			this._MailerOrderItems = new EntitySet<MailerOrderItem>(new Action<MailerOrderItem>(this.attach_MailerOrderItems), new Action<MailerOrderItem>(this.detach_MailerOrderItems));
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationLevel", DbType="Int")]
		public System.Nullable<int> NotificationLevel
		{
			get
			{
				return this._NotificationLevel;
			}
			set
			{
				if ((this._NotificationLevel != value))
				{
					this.OnNotificationLevelChanging(value);
					this.SendPropertyChanging();
					this._NotificationLevel = value;
					this.SendPropertyChanged("NotificationLevel");
					this.OnNotificationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="BigInt")]
		public System.Nullable<long> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mailer_MailerOrderItem", Storage="_MailerOrderItems", ThisKey="ID", OtherKey="MailerID")]
		public EntitySet<MailerOrderItem> MailerOrderItems
		{
			get
			{
				return this._MailerOrderItems;
			}
			set
			{
				this._MailerOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Mailer", Storage="_Supplier", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Mailers.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Mailers.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MailerOrderItems(MailerOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Mailer = this;
		}
		
		private void detach_MailerOrderItems(MailerOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Mailer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecondaryItems")]
	public partial class SecondaryItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private int _Quantity;
		
		private decimal _Cost;
		
		private System.Nullable<int> _NotificationLevel;
		
		private System.Nullable<long> _SupplierID;
		
		private bool _ApplicationKit;
		
		private bool _Mailer;
		
		private EntitySet<SecondaryOrderItem> _SecondaryOrderItems;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnNotificationLevelChanging(System.Nullable<int> value);
    partial void OnNotificationLevelChanged();
    partial void OnSupplierIDChanging(System.Nullable<long> value);
    partial void OnSupplierIDChanged();
    partial void OnApplicationKitChanging(bool value);
    partial void OnApplicationKitChanged();
    partial void OnMailerChanging(bool value);
    partial void OnMailerChanged();
    #endregion
		
		public SecondaryItem()
		{
			this._SecondaryOrderItems = new EntitySet<SecondaryOrderItem>(new Action<SecondaryOrderItem>(this.attach_SecondaryOrderItems), new Action<SecondaryOrderItem>(this.detach_SecondaryOrderItems));
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,2) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationLevel", DbType="Int")]
		public System.Nullable<int> NotificationLevel
		{
			get
			{
				return this._NotificationLevel;
			}
			set
			{
				if ((this._NotificationLevel != value))
				{
					this.OnNotificationLevelChanging(value);
					this.SendPropertyChanging();
					this._NotificationLevel = value;
					this.SendPropertyChanged("NotificationLevel");
					this.OnNotificationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="BigInt")]
		public System.Nullable<long> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationKit", DbType="Bit NOT NULL")]
		public bool ApplicationKit
		{
			get
			{
				return this._ApplicationKit;
			}
			set
			{
				if ((this._ApplicationKit != value))
				{
					this.OnApplicationKitChanging(value);
					this.SendPropertyChanging();
					this._ApplicationKit = value;
					this.SendPropertyChanged("ApplicationKit");
					this.OnApplicationKitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mailer", DbType="Bit NOT NULL")]
		public bool Mailer
		{
			get
			{
				return this._Mailer;
			}
			set
			{
				if ((this._Mailer != value))
				{
					this.OnMailerChanging(value);
					this.SendPropertyChanging();
					this._Mailer = value;
					this.SendPropertyChanged("Mailer");
					this.OnMailerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecondaryItem_SecondaryOrderItem", Storage="_SecondaryOrderItems", ThisKey="ID", OtherKey="SecondaryID")]
		public EntitySet<SecondaryOrderItem> SecondaryOrderItems
		{
			get
			{
				return this._SecondaryOrderItems;
			}
			set
			{
				this._SecondaryOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_SecondaryItem", Storage="_Supplier", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.SecondaryItems.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.SecondaryItems.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SecondaryOrderItems(SecondaryOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.SecondaryItem = this;
		}
		
		private void detach_SecondaryOrderItems(SecondaryOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.SecondaryItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VinylType")]
	public partial class VinylType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TypeName;
		
		private EntitySet<Vinyl> _Vinyls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public VinylType()
		{
			this._Vinyls = new EntitySet<Vinyl>(new Action<Vinyl>(this.attach_Vinyls), new Action<Vinyl>(this.detach_Vinyls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(255)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VinylType_Vinyl", Storage="_Vinyls", ThisKey="ID", OtherKey="VinylType")]
		public EntitySet<Vinyl> Vinyls
		{
			get
			{
				return this._Vinyls;
			}
			set
			{
				this._Vinyls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vinyls(Vinyl entity)
		{
			this.SendPropertyChanging();
			entity.VinylType1 = this;
		}
		
		private void detach_Vinyls(Vinyl entity)
		{
			this.SendPropertyChanging();
			entity.VinylType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecondaryOrderItems")]
	public partial class SecondaryOrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _OrderID;
		
		private long _SecondaryID;
		
		private decimal _Quantity;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<SecondaryItem> _SecondaryItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(long value);
    partial void OnOrderIDChanged();
    partial void OnSecondaryIDChanging(long value);
    partial void OnSecondaryIDChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    #endregion
		
		public SecondaryOrderItem()
		{
			this._Order = default(EntityRef<Order>);
			this._SecondaryItem = default(EntityRef<SecondaryItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="BigInt NOT NULL")]
		public long OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryID", DbType="BigInt NOT NULL")]
		public long SecondaryID
		{
			get
			{
				return this._SecondaryID;
			}
			set
			{
				if ((this._SecondaryID != value))
				{
					if (this._SecondaryItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecondaryIDChanging(value);
					this.SendPropertyChanging();
					this._SecondaryID = value;
					this.SendPropertyChanged("SecondaryID");
					this.OnSecondaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(5,2) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_SecondaryOrderItem", Storage="_Order", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.SecondaryOrderItems.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.SecondaryOrderItems.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(long);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecondaryItem_SecondaryOrderItem", Storage="_SecondaryItem", ThisKey="SecondaryID", OtherKey="ID", IsForeignKey=true)]
		public SecondaryItem SecondaryItem
		{
			get
			{
				return this._SecondaryItem.Entity;
			}
			set
			{
				SecondaryItem previousValue = this._SecondaryItem.Entity;
				if (((previousValue != value) 
							|| (this._SecondaryItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecondaryItem.Entity = null;
						previousValue.SecondaryOrderItems.Remove(this);
					}
					this._SecondaryItem.Entity = value;
					if ((value != null))
					{
						value.SecondaryOrderItems.Add(this);
						this._SecondaryID = value.ID;
					}
					else
					{
						this._SecondaryID = default(long);
					}
					this.SendPropertyChanged("SecondaryItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShirtColors")]
	public partial class ShirtColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<Shirt> _Shirts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ShirtColor()
		{
			this._Shirts = new EntitySet<Shirt>(new Action<Shirt>(this.attach_Shirts), new Action<Shirt>(this.detach_Shirts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShirtColor_Shirt", Storage="_Shirts", ThisKey="ID", OtherKey="ColorID")]
		public EntitySet<Shirt> Shirts
		{
			get
			{
				return this._Shirts;
			}
			set
			{
				this._Shirts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shirts(Shirt entity)
		{
			this.SendPropertyChanging();
			entity.ShirtColor = this;
		}
		
		private void detach_Shirts(Shirt entity)
		{
			this.SendPropertyChanging();
			entity.ShirtColor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shirts")]
	public partial class Shirt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _Quantity;
		
		private decimal _Cost;
		
		private long _ColorID;
		
		private long _StyleID;
		
		private long _SizeID;
		
		private EntityRef<ShirtColor> _ShirtColor;
		
		private EntityRef<ShirtSize> _ShirtSize;
		
		private EntityRef<ShirtStyle> _ShirtStyle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnColorIDChanging(long value);
    partial void OnColorIDChanged();
    partial void OnStyleIDChanging(long value);
    partial void OnStyleIDChanged();
    partial void OnSizeIDChanging(long value);
    partial void OnSizeIDChanged();
    #endregion
		
		public Shirt()
		{
			this._ShirtColor = default(EntityRef<ShirtColor>);
			this._ShirtSize = default(EntityRef<ShirtSize>);
			this._ShirtStyle = default(EntityRef<ShirtStyle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(5,2) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorID", DbType="BigInt NOT NULL")]
		public long ColorID
		{
			get
			{
				return this._ColorID;
			}
			set
			{
				if ((this._ColorID != value))
				{
					if (this._ShirtColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorIDChanging(value);
					this.SendPropertyChanging();
					this._ColorID = value;
					this.SendPropertyChanged("ColorID");
					this.OnColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StyleID", DbType="BigInt NOT NULL")]
		public long StyleID
		{
			get
			{
				return this._StyleID;
			}
			set
			{
				if ((this._StyleID != value))
				{
					if (this._ShirtStyle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStyleIDChanging(value);
					this.SendPropertyChanging();
					this._StyleID = value;
					this.SendPropertyChanged("StyleID");
					this.OnStyleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeID", DbType="BigInt NOT NULL")]
		public long SizeID
		{
			get
			{
				return this._SizeID;
			}
			set
			{
				if ((this._SizeID != value))
				{
					if (this._ShirtSize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSizeIDChanging(value);
					this.SendPropertyChanging();
					this._SizeID = value;
					this.SendPropertyChanged("SizeID");
					this.OnSizeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShirtColor_Shirt", Storage="_ShirtColor", ThisKey="ColorID", OtherKey="ID", IsForeignKey=true)]
		public ShirtColor ShirtColor
		{
			get
			{
				return this._ShirtColor.Entity;
			}
			set
			{
				ShirtColor previousValue = this._ShirtColor.Entity;
				if (((previousValue != value) 
							|| (this._ShirtColor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShirtColor.Entity = null;
						previousValue.Shirts.Remove(this);
					}
					this._ShirtColor.Entity = value;
					if ((value != null))
					{
						value.Shirts.Add(this);
						this._ColorID = value.ID;
					}
					else
					{
						this._ColorID = default(long);
					}
					this.SendPropertyChanged("ShirtColor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShirtSize_Shirt", Storage="_ShirtSize", ThisKey="SizeID", OtherKey="ID", IsForeignKey=true)]
		public ShirtSize ShirtSize
		{
			get
			{
				return this._ShirtSize.Entity;
			}
			set
			{
				ShirtSize previousValue = this._ShirtSize.Entity;
				if (((previousValue != value) 
							|| (this._ShirtSize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShirtSize.Entity = null;
						previousValue.Shirts.Remove(this);
					}
					this._ShirtSize.Entity = value;
					if ((value != null))
					{
						value.Shirts.Add(this);
						this._SizeID = value.ID;
					}
					else
					{
						this._SizeID = default(long);
					}
					this.SendPropertyChanged("ShirtSize");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShirtStyle_Shirt", Storage="_ShirtStyle", ThisKey="StyleID", OtherKey="ID", IsForeignKey=true)]
		public ShirtStyle ShirtStyle
		{
			get
			{
				return this._ShirtStyle.Entity;
			}
			set
			{
				ShirtStyle previousValue = this._ShirtStyle.Entity;
				if (((previousValue != value) 
							|| (this._ShirtStyle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShirtStyle.Entity = null;
						previousValue.Shirts.Remove(this);
					}
					this._ShirtStyle.Entity = value;
					if ((value != null))
					{
						value.Shirts.Add(this);
						this._StyleID = value.ID;
					}
					else
					{
						this._StyleID = default(long);
					}
					this.SendPropertyChanged("ShirtStyle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShirtSizes")]
	public partial class ShirtSize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<Shirt> _Shirts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ShirtSize()
		{
			this._Shirts = new EntitySet<Shirt>(new Action<Shirt>(this.attach_Shirts), new Action<Shirt>(this.detach_Shirts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShirtSize_Shirt", Storage="_Shirts", ThisKey="ID", OtherKey="SizeID")]
		public EntitySet<Shirt> Shirts
		{
			get
			{
				return this._Shirts;
			}
			set
			{
				this._Shirts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shirts(Shirt entity)
		{
			this.SendPropertyChanging();
			entity.ShirtSize = this;
		}
		
		private void detach_Shirts(Shirt entity)
		{
			this.SendPropertyChanging();
			entity.ShirtSize = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShirtStyles")]
	public partial class ShirtStyle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<Shirt> _Shirts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ShirtStyle()
		{
			this._Shirts = new EntitySet<Shirt>(new Action<Shirt>(this.attach_Shirts), new Action<Shirt>(this.detach_Shirts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShirtStyle_Shirt", Storage="_Shirts", ThisKey="ID", OtherKey="StyleID")]
		public EntitySet<Shirt> Shirts
		{
			get
			{
				return this._Shirts;
			}
			set
			{
				this._Shirts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shirts(Shirt entity)
		{
			this.SendPropertyChanging();
			entity.ShirtStyle = this;
		}
		
		private void detach_Shirts(Shirt entity)
		{
			this.SendPropertyChanging();
			entity.ShirtStyle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StickerOrderItems")]
	public partial class StickerOrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _OrderID;
		
		private System.Nullable<long> _StickerID;
		
		private int _Quantity;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<Sticker> _Sticker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(long value);
    partial void OnOrderIDChanged();
    partial void OnStickerIDChanging(System.Nullable<long> value);
    partial void OnStickerIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public StickerOrderItem()
		{
			this._Order = default(EntityRef<Order>);
			this._Sticker = default(EntityRef<Sticker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="BigInt NOT NULL")]
		public long OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StickerID", DbType="BigInt")]
		public System.Nullable<long> StickerID
		{
			get
			{
				return this._StickerID;
			}
			set
			{
				if ((this._StickerID != value))
				{
					if (this._Sticker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStickerIDChanging(value);
					this.SendPropertyChanging();
					this._StickerID = value;
					this.SendPropertyChanged("StickerID");
					this.OnStickerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_StickerOrderItem", Storage="_Order", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.StickerOrderItems.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.StickerOrderItems.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(long);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sticker_StickerOrderItem", Storage="_Sticker", ThisKey="StickerID", OtherKey="ID", IsForeignKey=true)]
		public Sticker Sticker
		{
			get
			{
				return this._Sticker.Entity;
			}
			set
			{
				Sticker previousValue = this._Sticker.Entity;
				if (((previousValue != value) 
							|| (this._Sticker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sticker.Entity = null;
						previousValue.StickerOrderItems.Remove(this);
					}
					this._Sticker.Entity = value;
					if ((value != null))
					{
						value.StickerOrderItems.Add(this);
						this._StickerID = value.ID;
					}
					else
					{
						this._StickerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Sticker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stickers")]
	public partial class Sticker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private int _Quantity;
		
		private decimal _Cost;
		
		private System.Nullable<int> _NotificationLevel;
		
		private System.Nullable<long> _SupplierID;
		
		private EntitySet<StickerOrderItem> _StickerOrderItems;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnNotificationLevelChanging(System.Nullable<int> value);
    partial void OnNotificationLevelChanged();
    partial void OnSupplierIDChanging(System.Nullable<long> value);
    partial void OnSupplierIDChanged();
    #endregion
		
		public Sticker()
		{
			this._StickerOrderItems = new EntitySet<StickerOrderItem>(new Action<StickerOrderItem>(this.attach_StickerOrderItems), new Action<StickerOrderItem>(this.detach_StickerOrderItems));
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,2) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationLevel", DbType="Int")]
		public System.Nullable<int> NotificationLevel
		{
			get
			{
				return this._NotificationLevel;
			}
			set
			{
				if ((this._NotificationLevel != value))
				{
					this.OnNotificationLevelChanging(value);
					this.SendPropertyChanging();
					this._NotificationLevel = value;
					this.SendPropertyChanged("NotificationLevel");
					this.OnNotificationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="BigInt")]
		public System.Nullable<long> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sticker_StickerOrderItem", Storage="_StickerOrderItems", ThisKey="ID", OtherKey="StickerID")]
		public EntitySet<StickerOrderItem> StickerOrderItems
		{
			get
			{
				return this._StickerOrderItems;
			}
			set
			{
				this._StickerOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Sticker", Storage="_Supplier", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Stickers.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Stickers.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StickerOrderItems(StickerOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Sticker = this;
		}
		
		private void detach_StickerOrderItems(StickerOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Sticker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _ItemLink;
		
		private EntitySet<Mailer> _Mailers;
		
		private EntitySet<SecondaryItem> _SecondaryItems;
		
		private EntitySet<Sticker> _Stickers;
		
		private EntitySet<Vinyl> _Vinyls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnItemLinkChanging(string value);
    partial void OnItemLinkChanged();
    #endregion
		
		public Supplier()
		{
			this._Mailers = new EntitySet<Mailer>(new Action<Mailer>(this.attach_Mailers), new Action<Mailer>(this.detach_Mailers));
			this._SecondaryItems = new EntitySet<SecondaryItem>(new Action<SecondaryItem>(this.attach_SecondaryItems), new Action<SecondaryItem>(this.detach_SecondaryItems));
			this._Stickers = new EntitySet<Sticker>(new Action<Sticker>(this.attach_Stickers), new Action<Sticker>(this.detach_Stickers));
			this._Vinyls = new EntitySet<Vinyl>(new Action<Vinyl>(this.attach_Vinyls), new Action<Vinyl>(this.detach_Vinyls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLink", DbType="VarChar(1024)")]
		public string ItemLink
		{
			get
			{
				return this._ItemLink;
			}
			set
			{
				if ((this._ItemLink != value))
				{
					this.OnItemLinkChanging(value);
					this.SendPropertyChanging();
					this._ItemLink = value;
					this.SendPropertyChanged("ItemLink");
					this.OnItemLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Mailer", Storage="_Mailers", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<Mailer> Mailers
		{
			get
			{
				return this._Mailers;
			}
			set
			{
				this._Mailers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_SecondaryItem", Storage="_SecondaryItems", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<SecondaryItem> SecondaryItems
		{
			get
			{
				return this._SecondaryItems;
			}
			set
			{
				this._SecondaryItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Sticker", Storage="_Stickers", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<Sticker> Stickers
		{
			get
			{
				return this._Stickers;
			}
			set
			{
				this._Stickers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Vinyl", Storage="_Vinyls", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<Vinyl> Vinyls
		{
			get
			{
				return this._Vinyls;
			}
			set
			{
				this._Vinyls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mailers(Mailer entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Mailers(Mailer entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_SecondaryItems(SecondaryItem entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_SecondaryItems(SecondaryItem entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_Stickers(Sticker entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Stickers(Sticker entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_Vinyls(Vinyl entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Vinyls(Vinyl entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vinyl")]
	public partial class Vinyl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _ColorID;
		
		private int _FullSheet;
		
		private int _ThreeQuarterSheet;
		
		private int _HalfSheet;
		
		private int _QuarterSheet;
		
		private decimal _CostperSqFt;
		
		private System.Nullable<int> _NotificationLevel;
		
		private System.Nullable<long> _VinylType;
		
		private System.Nullable<long> _SupplierID;
		
		private EntityRef<Color> _Color;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<VinylType> _VinylType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnColorIDChanging(System.Nullable<long> value);
    partial void OnColorIDChanged();
    partial void OnFullSheetChanging(int value);
    partial void OnFullSheetChanged();
    partial void OnThreeQuarterSheetChanging(int value);
    partial void OnThreeQuarterSheetChanged();
    partial void OnHalfSheetChanging(int value);
    partial void OnHalfSheetChanged();
    partial void OnQuarterSheetChanging(int value);
    partial void OnQuarterSheetChanged();
    partial void OnCostperSqFtChanging(decimal value);
    partial void OnCostperSqFtChanged();
    partial void OnNotificationLevelChanging(System.Nullable<int> value);
    partial void OnNotificationLevelChanged();
    partial void OnVinylTypeChanging(System.Nullable<long> value);
    partial void OnVinylTypeChanged();
    partial void OnSupplierIDChanging(System.Nullable<long> value);
    partial void OnSupplierIDChanged();
    #endregion
		
		public Vinyl()
		{
			this._Color = default(EntityRef<Color>);
			this._Supplier = default(EntityRef<Supplier>);
			this._VinylType1 = default(EntityRef<VinylType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorID", DbType="BigInt")]
		public System.Nullable<long> ColorID
		{
			get
			{
				return this._ColorID;
			}
			set
			{
				if ((this._ColorID != value))
				{
					if (this._Color.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorIDChanging(value);
					this.SendPropertyChanging();
					this._ColorID = value;
					this.SendPropertyChanged("ColorID");
					this.OnColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullSheet", DbType="Int NOT NULL")]
		public int FullSheet
		{
			get
			{
				return this._FullSheet;
			}
			set
			{
				if ((this._FullSheet != value))
				{
					this.OnFullSheetChanging(value);
					this.SendPropertyChanging();
					this._FullSheet = value;
					this.SendPropertyChanged("FullSheet");
					this.OnFullSheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreeQuarterSheet", DbType="Int NOT NULL")]
		public int ThreeQuarterSheet
		{
			get
			{
				return this._ThreeQuarterSheet;
			}
			set
			{
				if ((this._ThreeQuarterSheet != value))
				{
					this.OnThreeQuarterSheetChanging(value);
					this.SendPropertyChanging();
					this._ThreeQuarterSheet = value;
					this.SendPropertyChanged("ThreeQuarterSheet");
					this.OnThreeQuarterSheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HalfSheet", DbType="Int NOT NULL")]
		public int HalfSheet
		{
			get
			{
				return this._HalfSheet;
			}
			set
			{
				if ((this._HalfSheet != value))
				{
					this.OnHalfSheetChanging(value);
					this.SendPropertyChanging();
					this._HalfSheet = value;
					this.SendPropertyChanged("HalfSheet");
					this.OnHalfSheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuarterSheet", DbType="Int NOT NULL")]
		public int QuarterSheet
		{
			get
			{
				return this._QuarterSheet;
			}
			set
			{
				if ((this._QuarterSheet != value))
				{
					this.OnQuarterSheetChanging(value);
					this.SendPropertyChanging();
					this._QuarterSheet = value;
					this.SendPropertyChanged("QuarterSheet");
					this.OnQuarterSheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostperSqFt", DbType="Decimal(5,2) NOT NULL")]
		public decimal CostperSqFt
		{
			get
			{
				return this._CostperSqFt;
			}
			set
			{
				if ((this._CostperSqFt != value))
				{
					this.OnCostperSqFtChanging(value);
					this.SendPropertyChanging();
					this._CostperSqFt = value;
					this.SendPropertyChanged("CostperSqFt");
					this.OnCostperSqFtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationLevel", DbType="Int")]
		public System.Nullable<int> NotificationLevel
		{
			get
			{
				return this._NotificationLevel;
			}
			set
			{
				if ((this._NotificationLevel != value))
				{
					this.OnNotificationLevelChanging(value);
					this.SendPropertyChanging();
					this._NotificationLevel = value;
					this.SendPropertyChanged("NotificationLevel");
					this.OnNotificationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VinylType", DbType="BigInt")]
		public System.Nullable<long> VinylType
		{
			get
			{
				return this._VinylType;
			}
			set
			{
				if ((this._VinylType != value))
				{
					if (this._VinylType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVinylTypeChanging(value);
					this.SendPropertyChanging();
					this._VinylType = value;
					this.SendPropertyChanged("VinylType");
					this.OnVinylTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="BigInt")]
		public System.Nullable<long> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Color_Vinyl", Storage="_Color", ThisKey="ColorID", OtherKey="ID", IsForeignKey=true)]
		public Color Color
		{
			get
			{
				return this._Color.Entity;
			}
			set
			{
				Color previousValue = this._Color.Entity;
				if (((previousValue != value) 
							|| (this._Color.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Color.Entity = null;
						previousValue.Vinyls.Remove(this);
					}
					this._Color.Entity = value;
					if ((value != null))
					{
						value.Vinyls.Add(this);
						this._ColorID = value.ID;
					}
					else
					{
						this._ColorID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Color");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Vinyl", Storage="_Supplier", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Vinyls.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Vinyls.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VinylType_Vinyl", Storage="_VinylType1", ThisKey="VinylType", OtherKey="ID", IsForeignKey=true)]
		public VinylType VinylType1
		{
			get
			{
				return this._VinylType1.Entity;
			}
			set
			{
				VinylType previousValue = this._VinylType1.Entity;
				if (((previousValue != value) 
							|| (this._VinylType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VinylType1.Entity = null;
						previousValue.Vinyls.Remove(this);
					}
					this._VinylType1.Entity = value;
					if ((value != null))
					{
						value.Vinyls.Add(this);
						this._VinylType = value.ID;
					}
					else
					{
						this._VinylType = default(Nullable<long>);
					}
					this.SendPropertyChanged("VinylType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VinylOrderItems")]
	public partial class VinylOrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _OrderID;
		
		private long _ProductID;
		
		private decimal _Quantity;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(long value);
    partial void OnOrderIDChanged();
    partial void OnProductIDChanging(long value);
    partial void OnProductIDChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    #endregion
		
		public VinylOrderItem()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="BigInt NOT NULL")]
		public long OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="BigInt NOT NULL")]
		public long ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(5,2) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_VinylOrderItem", Storage="_Order", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.VinylOrderItems.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.VinylOrderItems.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(long);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_AllQuantities")]
	public partial class V_AllQuantity
	{
		
		private string _Table;
		
		private long _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _NotificationLevel;
		
		private System.Nullable<long> _SupplierID;
		
		private System.Nullable<decimal> _Stock;
		
		public V_AllQuantity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Table]", Storage="_Table", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string Table
		{
			get
			{
				return this._Table;
			}
			set
			{
				if ((this._Table != value))
				{
					this._Table = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationLevel", DbType="Int")]
		public System.Nullable<int> NotificationLevel
		{
			get
			{
				return this._NotificationLevel;
			}
			set
			{
				if ((this._NotificationLevel != value))
				{
					this._NotificationLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="BigInt")]
		public System.Nullable<long> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this._SupplierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Decimal(21,2)")]
		public System.Nullable<decimal> Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this._Stock = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_VinylStock")]
	public partial class v_VinylStock
	{
		
		private System.Nullable<decimal> _Total;
		
		public v_VinylStock()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_Color_Type")]
	public partial class v_Color_Type
	{
		
		private long _ProdID;
		
		private string _Color_type;
		
		public v_Color_Type()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProdID", DbType="BigInt NOT NULL")]
		public long ProdID
		{
			get
			{
				return this._ProdID;
			}
			set
			{
				if ((this._ProdID != value))
				{
					this._ProdID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color_type", DbType="VarChar(290)")]
		public string Color_type
		{
			get
			{
				return this._Color_type;
			}
			set
			{
				if ((this._Color_type != value))
				{
					this._Color_type = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_NeedToOrder")]
	public partial class V_NeedToOrder
	{
		
		private string _Table;
		
		private long _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _NotificationLevel;
		
		private string _Supplier;
		
		private string _ItemLink;
		
		public V_NeedToOrder()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Table]", Storage="_Table", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string Table
		{
			get
			{
				return this._Table;
			}
			set
			{
				if ((this._Table != value))
				{
					this._Table = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationLevel", DbType="Int")]
		public System.Nullable<int> NotificationLevel
		{
			get
			{
				return this._NotificationLevel;
			}
			set
			{
				if ((this._NotificationLevel != value))
				{
					this._NotificationLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="VarChar(128)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this._Supplier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLink", DbType="VarChar(1024)")]
		public string ItemLink
		{
			get
			{
				return this._ItemLink;
			}
			set
			{
				if ((this._ItemLink != value))
				{
					this._ItemLink = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_OrderItems")]
	public partial class V_OrderItem
	{
		
		private long _Order_Number;
		
		private System.Nullable<long> _Item_ID;
		
		private string _Item_Name;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _Material_Cost;
		
		public V_OrderItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order Number]", Storage="_Order_Number", DbType="BigInt NOT NULL")]
		public long Order_Number
		{
			get
			{
				return this._Order_Number;
			}
			set
			{
				if ((this._Order_Number != value))
				{
					this._Order_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Item ID]", Storage="_Item_ID", DbType="BigInt")]
		public System.Nullable<long> Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Item Name]", Storage="_Item_Name", DbType="VarChar(128)")]
		public string Item_Name
		{
			get
			{
				return this._Item_Name;
			}
			set
			{
				if ((this._Item_Name != value))
				{
					this._Item_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Material Cost]", Storage="_Material_Cost", DbType="Decimal(23,4)")]
		public System.Nullable<decimal> Material_Cost
		{
			get
			{
				return this._Material_Cost;
			}
			set
			{
				if ((this._Material_Cost != value))
				{
					this._Material_Cost = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_Products")]
	public partial class v_Product
	{
		
		private string _Color;
		
		private int _Full_Sheets;
		
		private int @__3_4_Sheets;
		
		private int @__1_2_Sheets;
		
		private int @__1_4_Sheets;
		
		private string _Vinyl_Type;
		
		private long _ProductID;
		
		public v_Product()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Full Sheets]", Storage="_Full_Sheets", DbType="Int NOT NULL")]
		public int Full_Sheets
		{
			get
			{
				return this._Full_Sheets;
			}
			set
			{
				if ((this._Full_Sheets != value))
				{
					this._Full_Sheets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[3/4 Sheets]", Storage="__3_4_Sheets", DbType="Int NOT NULL")]
		public int _3_4_Sheets
		{
			get
			{
				return this.@__3_4_Sheets;
			}
			set
			{
				if ((this.@__3_4_Sheets != value))
				{
					this.@__3_4_Sheets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[1/2 Sheets]", Storage="__1_2_Sheets", DbType="Int NOT NULL")]
		public int _1_2_Sheets
		{
			get
			{
				return this.@__1_2_Sheets;
			}
			set
			{
				if ((this.@__1_2_Sheets != value))
				{
					this.@__1_2_Sheets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[1/4 Sheets]", Storage="__1_4_Sheets", DbType="Int NOT NULL")]
		public int _1_4_Sheets
		{
			get
			{
				return this.@__1_4_Sheets;
			}
			set
			{
				if ((this.@__1_4_Sheets != value))
				{
					this.@__1_4_Sheets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Vinyl Type]", Storage="_Vinyl_Type", DbType="VarChar(255)")]
		public string Vinyl_Type
		{
			get
			{
				return this._Vinyl_Type;
			}
			set
			{
				if ((this._Vinyl_Type != value))
				{
					this._Vinyl_Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="BigInt NOT NULL")]
		public long ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_ProductTotals")]
	public partial class v_ProductTotal
	{
		
		private string _Color;
		
		private int _Full_Sheets;
		
		private int @__3_4_Sheets;
		
		private int @__1_2_Sheets;
		
		private int @__1_4_Sheets;
		
		private System.Nullable<decimal> _Total_Sheets;
		
		private System.Nullable<decimal> _Total_cost;
		
		public v_ProductTotal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Full Sheets]", Storage="_Full_Sheets", DbType="Int NOT NULL")]
		public int Full_Sheets
		{
			get
			{
				return this._Full_Sheets;
			}
			set
			{
				if ((this._Full_Sheets != value))
				{
					this._Full_Sheets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[3/4 Sheets]", Storage="__3_4_Sheets", DbType="Int NOT NULL")]
		public int _3_4_Sheets
		{
			get
			{
				return this.@__3_4_Sheets;
			}
			set
			{
				if ((this.@__3_4_Sheets != value))
				{
					this.@__3_4_Sheets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[1/2 Sheets]", Storage="__1_2_Sheets", DbType="Int NOT NULL")]
		public int _1_2_Sheets
		{
			get
			{
				return this.@__1_2_Sheets;
			}
			set
			{
				if ((this.@__1_2_Sheets != value))
				{
					this.@__1_2_Sheets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[1/4 Sheets]", Storage="__1_4_Sheets", DbType="Int NOT NULL")]
		public int _1_4_Sheets
		{
			get
			{
				return this.@__1_4_Sheets;
			}
			set
			{
				if ((this.@__1_4_Sheets != value))
				{
					this.@__1_4_Sheets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total Sheets]", Storage="_Total_Sheets", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> Total_Sheets
		{
			get
			{
				return this._Total_Sheets;
			}
			set
			{
				if ((this._Total_Sheets != value))
				{
					this._Total_Sheets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total cost]", Storage="_Total_cost", DbType="Decimal(22,4)")]
		public System.Nullable<decimal> Total_cost
		{
			get
			{
				return this._Total_cost;
			}
			set
			{
				if ((this._Total_cost != value))
				{
					this._Total_cost = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_TotalStock")]
	public partial class v_TotalStock
	{
		
		private System.Nullable<decimal> _Total;
		
		public v_TotalStock()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
